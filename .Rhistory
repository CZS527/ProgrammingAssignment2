cat('Hello, world!\n')
cat('Hello, world!\nThis is ESP/CZM\n')
CAT('Hello, world!/nThis is CZS527!/n')
cat('Hello, world!\nThis is CZS527!\n')
args( class )
x<-4L
class( x)
x<-c(4, "a", TRUE)
class( x )
x
x<--4L
x
cbind(x,y)
x<-c(1,3,5)
x
y<-c(3,2,10)
y
cbind(x,y)
class(x)
class(y)
cube <- function*(x,n) {}
cube <- function*(x,n) { x^3}
cube <- function(x,n) { x^3}
cube(3)
x<-1:10
x
if(x>5) {x<-0}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##Concatenate directory and file number to get full path
## Ignore line below.
## fullpath <- paste( directory ,  id , ".csv", sep = "")
setwd( paste( "C:/Users/EricP_000/Documents/EducationAndTraining/CoursEra/JohnHopkinsDataScience/20130302ProgrammingInR/R_Files/Week2/" ,directory , sep = "") )
## loop through all file ids provied
i <- 1L
while( i <= length( id)
##Connect to data file in read-only mode
filename <- as.character( id[ i] )
k <- nchar(filename)
while( k < 3 ) {
filename <- paste( "0", filename, sep = "" )
k <- ( k + 1L )
}
filename <- paste( filename, ".csv", sep = "" )
data <- read.csv( filename)
## subset o t the appropriate column into a vector
if(pollutant == "sulfate" ) {
partialvalues <- data[,2][complete.cases(data[,2])]
}
if(pollutant == "nitrate") {
partialvalues <- data[,3][complete.cases(data[,3])]
}
j <- 1L
if( i == 1L ) {
values <- partialvalues
}
if( i > 1L ) {
len <- length( values )
length( values ) <- len + length(partialvalues)
while( j <= length(partialvalues)) {
values[length(values) + j ] <- partialvalues[j]
}
}
}
## return the mean of populated values
round(mean( values ), digits = 3 )
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##Concatenate directory and file number to get full path
## Ignore line below.
## fullpath <- paste( directory ,  id , ".csv", sep = "")
setwd( paste( "C:/Users/EricP_000/Documents/EducationAndTraining/CoursEra/JohnHopkinsDataScience/20130302ProgrammingInR/R_Files/Week2/" ,directory , sep = "") )
## loop through all file ids provied
i <- 1L
while( i <= length( id)
##Connect to data file in read-only mode
filename <- as.character( id[ i] )
k <- nchar(filename)
while( k < 3 ) {
filename <- paste( "0", filename, sep = "" )
k <- ( k + 1L )
}
filename <- paste( filename, ".csv", sep = "" )
data <- read.csv( filename)
## subset o t the appropriate column into a vector
if(pollutant == "sulfate" ) {
partialvalues <- data[,2][complete.cases(data[,2])]
}
if(pollutant == "nitrate") {
partialvalues <- data[,3][complete.cases(data[,3])]
}
j <- 1L
if( i == 1L ) {
values <- partialvalues
}
if( i > 1L ) {
len <- length( values )
length( values ) <- len + length(partialvalues)
while( j <= length(partialvalues)) {
values[length(values) + j ] <- partialvalues[j]
}
}
}
## return the mean of populated values
round(mean( values ), digits = 3 )
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
##Concatenate directory and file number to get full path
## Ignore line below.
## fullpath <- paste( directory ,  id , ".csv", sep = "")
setwd( paste( "C:/Users/EricP_000/Documents/EducationAndTraining/CoursEra/JohnHopkinsDataScience/20130302ProgrammingInR/R_Files/Week2/" ,directory , sep = "") )
## loop through all file ids provied
i <- 1L
while( i <= length( id) {
##Connect to data file in read-only mode
filename <- as.character( id[ i] )
k <- nchar(filename)
while( k < 3 ) {
filename <- paste( "0", filename, sep = "" )
k <- ( k + 1L )
}
filename <- paste( filename, ".csv", sep = "" )
data <- read.csv( filename)
## subset o t the appropriate column into a vector
if(pollutant == "sulfate" ) {
partialvalues <- data[,2][complete.cases(data[,2])]
}
if(pollutant == "nitrate") {
partialvalues <- data[,3][complete.cases(data[,3])]
}
j <- 1L
if( i == 1L ) {
values <- partialvalues
}
if( i > 1L ) {
len <- length( values )
length( values ) <- len + length(partialvalues)
while( j <= length(partialvalues)) {
values[length(values) + j ] <- partialvalues[j]
}
}
}
## return the mean of populated values
round(mean( values ), digits = 3 )
}
library(datasets)
data(mtcars)
mtcars
library(datasets)
data(iris)
iris
?iris
?apply
print("Hello world!")
print("Or more specifically, datascitoolbox-012")
?clear
??clear
clr
?clr
??clr
??close
print(Hello, world!)
print("Hello, world!")
print("Or rather, datascitoolbox-012")
library("datasets")
data(iris)
?iris
iris
x <- iris[,1:4][iris[,4 == "virginica"]]
x <- iris[,1][iris[,4 == "virginica"]]
x <- iris[,1]
y <- iris[,4]
x
y
y <- iris$species
y
y <- iris$Species
y
virg <- y[y=="virginica"]
virg
library(datasets)
data(iris)
iirs
iris
y <- iris[,5]
virg <- iris[,5] = "virginica
"
virg <- iris[,5] = "virginica"
virg <- iris[,5] == "virginica"
vig
virg
iris[,1][iris[,5]=="virginica"]
mean( iris[,1][iris[,5]=="virginica"] )
?colmean
??colmean
virg <- iris[,1:5[iris$Species = "virginica"]
virg <- iris[,1:5[iris$Species == "virginica"]
virg <- iris[,1:5][iris$Species == "virginica"]
virg <- iris[,1:5][iris[,5] == "virginica"]
virg <- iris[,1:4][iris[,5] == "virginica"]
virg <- iris[,1][iris[,5] == "virginica"]
virg
mean(virg)
iris
colMeans(iris)
apply(iris[,1:4], 2, mean)
tapply(iris$Sepal.Length, (x <- iris.Species == "virginica", mean))
tapply(iris$Sepal.Length, (x <- iris$Species == "virginica", mean))
virg <- iris$Species == "virginica"
virg\
virg
tapply(iris$Sepal.Length, (x <- iris$Species == "virginica") , mean))
tapply(iris$Sepal.Length, virg , mean))
tapply(iris$Sepal.Length, virg , mean)
tapply(iris$Sepal.Length, iris$Species , mean)
library(datasets)
data(mtcars)
?mtcars
mtcars
tapply(mtcars$mpg , mtcars$cyl, mean)
split(mtcars$mpg,mtcars$cyl)
sapply( split(mtcars$mpg,mtcars$cyl) , mean )
tapply(mtcars$hp, mtcars$cyl, mean)
cyl <- split(mtcars$hp, mtcars$cyl)
cyl
mean(cyl[[8]]) - mean(cyl[[4]])
mean(cyl$8) - mean(cyl$4)
??mean
?mean
cyl4 <- cyl$4
cyl4 <- cyl[[4]]
cyl4 <- cyl[4]
cyl4
cyl4 <- NULL
cyl4
cyl4 <- c()
cyl4
lapply(cyl)
lapply(cyl, mean)
mean(cyl$`8`) - mean(cyl$`4`)
setwd("C:\Users\EricP_000\coursera\RProg")
setwd("\Users\EricP_000\coursera\RProg")
setwd("C:/Users/EricP_000/coursera/RProg/ProgrammingAssignment2")
dir()
source("README.md")
source("cachematrix.R")
source
clr
cls
